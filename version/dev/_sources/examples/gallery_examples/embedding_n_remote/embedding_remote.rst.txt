
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/gallery_examples/embedding_n_remote/embedding_remote.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_gallery_examples_embedding_n_remote_embedding_remote.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_gallery_examples_embedding_n_remote_embedding_remote.py:

.. _ref_embedding_remote:

Remote & Embedding Example
--------------------------
This code, which uses the same example, first demonstrates how to use
a remote session and then demonstrates how to use an embedding instance.

.. GENERATED FROM PYTHON SOURCE LINES 33-36

--------------
Remote Session
--------------

.. GENERATED FROM PYTHON SOURCE LINES 39-43

Download required files
~~~~~~~~~~~~~~~~~~~~~~~
Download the required files. Print the file paths for the geometry file and
script file.

.. GENERATED FROM PYTHON SOURCE LINES 43-56

.. code-block:: Python


    import os

    from ansys.mechanical.core import launch_mechanical
    from ansys.mechanical.core.examples import download_file

    geometry_path = download_file("Valve.pmdb", "pymechanical", "embedding")
    print(f"Downloaded the geometry file to: {geometry_path}")

    script_file_path = download_file("remote_script.py", "pymechanical", "embedding")
    print(f"Downloaded the script file to: {script_file_path}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloaded the geometry file to: /github/home/.local/share/ansys_mechanical_core/examples/Valve.pmdb
    Downloaded the script file to: /github/home/.local/share/ansys_mechanical_core/examples/remote_script.py




.. GENERATED FROM PYTHON SOURCE LINES 57-62

Launch Mechanical
~~~~~~~~~~~~~~~~~
Launch a new Mechanical session in batch, setting ``cleanup_on_exit`` to
``False``. To close this Mechanical session when finished, this example
must call  the ``mechanical.exit()`` method.

.. GENERATED FROM PYTHON SOURCE LINES 63-73

.. code-block:: Python


    import os

    from ansys.mechanical.core import launch_mechanical

    # Launch mechanical
    mechanical = launch_mechanical(batch=True, loglevel="DEBUG")
    print(mechanical)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Ansys Mechanical [Ansys Mechanical Enterprise]
    Product Version:251
    Software build date: 11/27/2024 09:34:44





.. GENERATED FROM PYTHON SOURCE LINES 74-78

Initialize variable for workflow
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set the ``part_file_path`` variable on the server for later use.
Make this variable compatible for Windows, Linux, and Docker containers.

.. GENERATED FROM PYTHON SOURCE LINES 78-96

.. code-block:: Python


    project_directory = mechanical.project_directory
    print(f"project directory = {project_directory}")

    # Upload the file to the project directory.
    mechanical.upload(file_name=geometry_path, file_location_destination=project_directory)

    # Build the path relative to project directory.
    base_name = os.path.basename(geometry_path)
    combined_path = os.path.join(project_directory, base_name)
    part_file_path = combined_path.replace("\\", "\\\\")
    mechanical.run_python_script(f"part_file_path='{part_file_path}'")

    # Verify the path
    result = mechanical.run_python_script("part_file_path")
    print(f"part_file_path on server: {result}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    project directory = /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/
    Uploading Valve.pmdb to dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/.:   0%|          | 0.00/774k [00:00<?, ?B/s]    Uploading Valve.pmdb to dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/.: 100%|██████████| 774k/774k [00:00<00:00, 294MB/s]
    part_file_path on server: /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/Valve.pmdb




.. GENERATED FROM PYTHON SOURCE LINES 97-100

Run mechanical automation script
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Run remote_script.py in the mechanical remote session.

.. GENERATED FROM PYTHON SOURCE LINES 100-104

.. code-block:: Python


    mechanical.run_python_script_from_file(script_file_path)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    ''



.. GENERATED FROM PYTHON SOURCE LINES 105-107

Get list of generated files
~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 107-113

.. code-block:: Python


    list_files = mechanical.list_files()
    for file in list_files:
        print(file)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file.mechdb
    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/.mech_lock
    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/MatML.xml
    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERep.xml
    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERepOutput.xml
    /tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/ds.dat




.. GENERATED FROM PYTHON SOURCE LINES 114-116

Write the file contents to console
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 116-129

.. code-block:: Python



    def write_file_contents_to_console(path, number_lines=-1):
        count = 1
        with open(path, "rt") as file:
            for line in file:
                if number_lines == -1 or count <= number_lines:
                    print(line, end="")
                    count = count + 1
                else:
                    break









.. GENERATED FROM PYTHON SOURCE LINES 130-132

Download files back to local working directory
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 132-142

.. code-block:: Python


    dest_dir = "download"
    dest_dir = os.path.join(os.getcwd(), dest_dir)
    for file in list_files:
        downloaded = mechanical.download(file, target_dir=dest_dir)
        if file.endswith(".out"):
            print("contents of ", downloaded, " : ")
            write_file_contents_to_console(downloaded[0], number_lines=-1)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file.mechdb to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/file.mechdb:   0%|          | 0.00/7.06M [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file.mechdb to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/file.mechdb: 100%|██████████| 7.06M/7.06M [00:00<00:00, 204MB/s]
    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/.mech_lock to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/.mech_lock:   0%|          | 0.00/17.0 [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/.mech_lock to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/.mech_lock: 100%|██████████| 17.0/17.0 [00:00<00:00, 50.4kB/s]
    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/MatML.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/MatML.xml:   0%|          | 0.00/23.3k [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/MatML.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/MatML.xml: 100%|██████████| 23.3k/23.3k [00:00<00:00, 55.1MB/s]
    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERep.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/CAERep.xml:   0%|          | 0.00/28.1k [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERep.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/CAERep.xml: 100%|██████████| 28.1k/28.1k [00:00<00:00, 609MB/s]
    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERepOutput.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/CAERepOutput.xml:   0%|          | 0.00/862 [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/CAERepOutput.xml to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/CAERepOutput.xml: 100%|██████████| 862/862 [00:00<00:00, 1.80MB/s]
    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/ds.dat to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/ds.dat:   0%|          | 0.00/4.85M [00:00<?, ?B/s]    Downloading dns:///127.0.0.1:10000:/tmp/ANSYS.root.1/AnsysMechFD3A/Project_Mech_Files/file_Mech_Files/StaticStructural/ds.dat to /__w/pymechanical/pymechanical/examples/embedding_n_remote/download/ds.dat: 100%|██████████| 4.85M/4.85M [00:00<00:00, 294MB/s]




.. GENERATED FROM PYTHON SOURCE LINES 143-146

Exit remote session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Close the Mechanical instance.

.. GENERATED FROM PYTHON SOURCE LINES 146-149

.. code-block:: Python


    mechanical.exit()








.. GENERATED FROM PYTHON SOURCE LINES 150-153

-----------------
Embedded Instance
-----------------

.. GENERATED FROM PYTHON SOURCE LINES 156-159

Download the geometry file
~~~~~~~~~~~~~~~~~~~~~~~~~~
Download Valve.pmdb.

.. GENERATED FROM PYTHON SOURCE LINES 159-169

.. code-block:: Python


    import os

    import ansys.mechanical.core as mech
    from ansys.mechanical.core.examples import download_file

    geometry_path = download_file("Valve.pmdb", "pymechanical", "embedding")
    print(f"Downloaded the geometry file to: {geometry_path}")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Downloaded the geometry file to: /github/home/.local/share/ansys_mechanical_core/examples/Valve.pmdb




.. GENERATED FROM PYTHON SOURCE LINES 170-174

Embed Mechanical and set global variables
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Find the mechanical installation path & version.
Open an embedded instance of Mechanical and set global variables.

.. GENERATED FROM PYTHON SOURCE LINES 174-179

.. code-block:: Python


    app = mech.App(globals=globals())
    print(app)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Ansys Mechanical [Ansys Mechanical Enterprise]
    Product Version:251
    Software build date: 11/27/2024 09:34:44





.. GENERATED FROM PYTHON SOURCE LINES 180-183

Add Static Analysis
~~~~~~~~~~~~~~~~~~~
Add static analysis to the Model.

.. GENERATED FROM PYTHON SOURCE LINES 183-187

.. code-block:: Python


    analysis = Model.AddStaticStructuralAnalysis()









.. GENERATED FROM PYTHON SOURCE LINES 188-190

Import geometry
~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 190-199

.. code-block:: Python


    geometry_file = geometry_path
    geometry_import = Model.GeometryImportGroup.AddGeometryImport()
    geometry_import_format = Ansys.Mechanical.DataModel.Enums.GeometryImportPreference.Format.Automatic
    geometry_import_preferences = Ansys.ACT.Mechanical.Utilities.GeometryImportPreferences()
    geometry_import_preferences.ProcessNamedSelections = True
    geometry_import.Import(geometry_file, geometry_import_format, geometry_import_preferences)









.. GENERATED FROM PYTHON SOURCE LINES 200-202

Assign material
~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 202-221

.. code-block:: Python


    matAssignment = Model.Materials.AddMaterialAssignment()
    tempSel = ExtAPI.SelectionManager.CreateSelectionInfo(
        Ansys.ACT.Interfaces.Common.SelectionTypeEnum.GeometryEntities
    )
    bodies = [
        body
        for body in ExtAPI.DataModel.Project.Model.Geometry.GetChildren(
            Ansys.Mechanical.DataModel.Enums.DataModelObjectCategory.Body, True
        )
    ]
    geobodies = [body.GetGeoBody() for body in bodies]
    ids = System.Collections.Generic.List[System.Int32]()
    [ids.Add(item.Id) for item in geobodies]
    tempSel.Ids = ids
    matAssignment.Location = tempSel
    matAssignment.Material = "Structural Steel"









.. GENERATED FROM PYTHON SOURCE LINES 222-224

Define mesh settings
~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 224-230

.. code-block:: Python


    mesh = Model.Mesh
    mesh.ElementSize = Quantity("25 [mm]")
    mesh.GenerateMesh()









.. GENERATED FROM PYTHON SOURCE LINES 231-233

Define boundary conditions
~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 233-256

.. code-block:: Python


    fixedSupport = analysis.AddFixedSupport()
    fixedSupport.Location = ExtAPI.DataModel.GetObjectsByName("NSFixedSupportFaces")[0]

    frictionlessSupport = analysis.AddFrictionlessSupport()
    frictionlessSupport.Location = ExtAPI.DataModel.GetObjectsByName("NSFrictionlessSupportFaces")[0]

    pressure = analysis.AddPressure()
    pressure.Location = ExtAPI.DataModel.GetObjectsByName("NSInsideFaces")[0]

    inputs_quantities = [Quantity("0 [s]"), Quantity("1 [s]")]
    output_quantities = [Quantity("0 [Pa]"), Quantity("15 [MPa]")]

    inputs_quantities_2 = System.Collections.Generic.List[Ansys.Core.Units.Quantity]()
    [inputs_quantities_2.Add(item) for item in inputs_quantities]

    output_quantities_2 = System.Collections.Generic.List[Ansys.Core.Units.Quantity]()
    [output_quantities_2.Add(item) for item in output_quantities]

    pressure.Magnitude.Inputs[0].DiscreteValues = inputs_quantities_2
    pressure.Magnitude.Output.DiscreteValues = output_quantities_2









.. GENERATED FROM PYTHON SOURCE LINES 257-259

Solve model
~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 259-263

.. code-block:: Python


    Model.Solve()









.. GENERATED FROM PYTHON SOURCE LINES 264-266

Add results
~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 266-273

.. code-block:: Python


    solution = analysis.Solution
    solution.AddTotalDeformation()
    solution.AddEquivalentStress()
    solution.EvaluateAllResults()









.. GENERATED FROM PYTHON SOURCE LINES 274-276

Save model
~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 276-282

.. code-block:: Python


    project_directory = ExtAPI.DataModel.Project.ProjectDirectory
    print(f"project directory = {project_directory}")
    ExtAPI.DataModel.Project.SaveAs(os.path.join(project_directory, "file.mechdb"))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    project directory = /tmp/ANSYS.root.1/AnsysMech205B/Project_Mech_Files/




.. GENERATED FROM PYTHON SOURCE LINES 283-285

Export result values to a text file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. GENERATED FROM PYTHON SOURCE LINES 285-304

.. code-block:: Python


    fileExtension = r".txt"
    results = solution.GetChildren(
        Ansys.Mechanical.DataModel.Enums.DataModelObjectCategory.Result, True
    )

    for result in results:
        fileName = str(result.Name)
        print(f"filename: {fileName}")
        path = os.path.join(project_directory, fileName + fileExtension)
        print(path)
        result.ExportToTextFile(f"{path}")
        print("Exported Text file Contents", path)
        try:
            write_file_contents_to_console(path, number_lines=20)
        except:
            print(os.listdir(project_directory))

    app.close()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    filename: Total Deformation
    /tmp/ANSYS.root.1/AnsysMech205B/Project_Mech_Files/Total Deformation.txt
    Exported Text file Contents /tmp/ANSYS.root.1/AnsysMech205B/Project_Mech_Files/Total Deformation.txt
    ['file.mechdb', 'file_Mech_Files']
    filename: Equivalent Stress
    /tmp/ANSYS.root.1/AnsysMech205B/Project_Mech_Files/Equivalent Stress.txt
    Exported Text file Contents /tmp/ANSYS.root.1/AnsysMech205B/Project_Mech_Files/Equivalent Stress.txt
    ['file.mechdb', 'file_Mech_Files']





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.528 seconds)


.. _sphx_glr_download_examples_gallery_examples_embedding_n_remote_embedding_remote.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: embedding_remote.ipynb <embedding_remote.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: embedding_remote.py <embedding_remote.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: embedding_remote.zip <embedding_remote.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
